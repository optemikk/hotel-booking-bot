import aiogram
from aiogram import types
from bot.menu.loader import menu_router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.utils.markdown import hide_link
from aiogram import F

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types.input_media_photo import InputMediaPhoto

from bot.main_loader import tgbot
from database.bot_database import bot_db

from bot.menu.callback.callback_kb import get_search_cancel_kb, get_confirm_data_kb,\
    get_confirm_request_hotel, get_confirm_hotel, get_hotels_kb, get_banya_cancel_kb, get_my_hotels_back_kb,\
    get_del_hotel_confirm_kb, get_confirm_banya_search_kb, get_banyas_kb, get_confirm_request_banya, get_confirm_banya,\
    get_confirm_date_keyboard, get_transfers_kb, get_confirm_place_kb, get_confirm_request_transfer, get_confirm_transfer,\
    get_all_hotels_kb, get_all_places_kb, get_all_transfers_kb, get_all_users_kb
from bot.menu.states.states_kb import get_places_kb
from bot.menu.states.states import SearchState
from bot.menu.states.states_kb import get_calendar_kb

from bot.start.commands.command_kb import get_start_kb



# @menu_router.callback_query(F.data)
# async def process(callback: CallbackQuery):
#     print(callback.data)


@menu_router.callback_query(F.data == 'start')
async def process(callback: CallbackQuery):
    await callback.message.edit_text(text='<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –æ—Ç–µ–ª—è.\n\n'
                                          '‚õ∫ –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ—Ç–µ–ª—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞.</b>',
                                     reply_markup=await get_start_kb(callback.from_user.id))


@menu_router.callback_query(F.data == 'banya')
async def process(callback: CallbackQuery):
    # await state.set_state(SearchState.banya_date)
    await callback.message.edit_text(text='<b>‚úè –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø–æ—Å–µ—â–µ–Ω–∏—è</b>',
                                     reply_markup=await get_calendar_kb(arg='banya'))

    # await state.update_data(data={'prev_msg': prev_msg})


@menu_router.callback_query(F.data == 'transfer')
async def process(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SearchState.transfer_data)
    prev_msg = await callback.message.edit_text(text='<b>‚úè –í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞ –≤—Å–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏ –¥–∞–Ω–Ω—ã–µ –æ –≤–∞—Å –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞:</b>',
                                                reply_markup=await get_search_cancel_kb())
    await state.update_data(data={'prev_msg': prev_msg})


@menu_router.callback_query(F.data[:10] == 'banya-day|')
async def process(callback: CallbackQuery, state: FSMContext):
    await bot_db.update_user_date(user_id=callback.from_user.id, date=callback.data.split('|')[-1], arg='banya')
    prev_msg = await callback.message.edit_text(text='<b>‚úè –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è</b>',
                                                reply_markup=await get_search_cancel_kb())
    await state.set_state(SearchState.banya_time)
    await state.update_data(data={'prev_msg': prev_msg})



@menu_router.callback_query(F.data == 'contacts')
async def process(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã:\n\n*—Ç—É—Ç –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã*',
                                     reply_markup=await get_start_kb(callback.from_user.id))



@menu_router.callback_query(F.data == 'search')
async def process(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SearchState.search_date)
    prev_msg = await callback.message.edit_text(text='<b>‚úè –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—ã –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è (—Å –∫–∞–∫–æ–≥–æ –ø–æ –∫–∞–∫–æ–µ)</b>',
                                                reply_markup=await get_calendar_kb(arg='hotel-from'))
    await state.update_data(data={'prev_msg': prev_msg})

    # -> bot.menu.states.state_handler


# <- bot.menu.states.state_handler


@menu_router.callback_query(F.data[:12] == 'banya-place|')
async def process(callback: CallbackQuery, state: FSMContext):
    place = callback.data.split('|')[-1]
    banyas = await bot_db.get_place_banyas(place)
    if not banyas:
        await callback.answer(text='‚ùå –ë–∞–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
        return
    await bot_db.update_user_place(user_id=callback.from_user.id, place=place, arg='banya')
    data = await bot_db.get_user_data(callback.from_user.id)
    date = data[27]
    time = data[28]
    count = data[29]
    place = data[30]
    await callback.message.edit_text(text=f'<b>‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –±–∞–Ω—é –≤ –ø–æ—Å–µ–ª–∫–µ <i>{place}</i>, '
                                          f'–Ω–∞ <i>{count} —á–µ–ª–æ–≤–µ–∫</i> '
                                          f'–≤ –ø–µ—Ä–∏–æ–¥ <i>{date}</i> –≤–æ –≤—Ä–µ–º—è <i>{time}</i>?</b>\n\n'
                                          f'<i>–í—Å–µ –≤–µ—Ä–Ω–æ?</i>',
                                     reply_markup=await get_confirm_banya_search_kb())


# @menu_router.callback_query(F.data[:13] == 'search-place|')
# async def process(callback: CallbackQuery, state: FSMContext):
#     # await callback.message.delete()
#
#     place = callback.data.split('|')[-1]
#     hotels = await bot_db.get_place_hotels(place)
#     if not hotels:
#         await callback.answer(text='‚ùå –û—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
#         return
#     await bot_db.update_user_place(user_id=callback.from_user.id, place=place, arg='hotel')
#     data = await bot_db.get_user_data(callback.from_user.id)
#     date = data[12]
#     time = data[13]
#     count = data[14]
#     place = data[15]
#     await callback.message.edit_text(text=f'<b>‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –æ—Ç–µ–ª—å –≤ –ø–æ—Å–µ–ª–∫–µ <i>{place}</i>, '
#                                           f'–Ω–∞ <i>{count} —á–µ–ª–æ–≤–µ–∫ </i> '
#                                           f'–≤ –ø–µ—Ä–∏–æ–¥ <i>{date}</i> –≤ <i>{time}</i>?</b>\n\n'
#                                           f'<i>–í—Å–µ –≤–µ—Ä–Ω–æ?</i>',
#                                      reply_markup=await get_confirm_data_kb())



@menu_router.callback_query(F.data[:13] == 'search-place|')
async def process(callback: CallbackQuery, state: FSMContext):
    # await callback.message.delete()

    place = callback.data.split('|')[-1]
    hotels = await bot_db.get_place_hotels(place)
    if not hotels:
        await callback.answer(text='‚ùå –û—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
        return
    await bot_db.update_user_place(user_id=callback.from_user.id, place=place, arg='hotel')
    data = await bot_db.get_user_data(callback.from_user.id)
    date = data[7]
    count = data[8]
    place = data[10]
    children = data[9]
    await callback.message.edit_text(text=f'<b>‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –æ—Ç–µ–ª—å –≤ –ø–æ—Å–µ–ª–∫–µ <i>{place}</i>, '
                                          f'–Ω–∞ <i>{count} —á–µ–ª–æ–≤–µ–∫, –¥–µ—Ç–∏: {children}, </i> '
                                          f'–≤ –ø–µ—Ä–∏–æ–¥ <i>{date}</i>?</b>\n\n'
                                          f'<i>–í—Å–µ –≤–µ—Ä–Ω–æ?</i>',
                                     reply_markup=await get_confirm_data_kb())


@menu_router.callback_query(F.data == 'cancel-search')
async def process(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.edit_text(text='<b>‚úÖ –í–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã, –∑–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.</b>\n\n'
                                          '<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –æ—Ç–µ–ª—è.\n\n'
                                          '–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ—Ç–µ–ª—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞.</b>',
                                     reply_markup=await get_start_kb(callback.from_user.id))


@menu_router.callback_query(F.data[:12] == 'cancel-user|')
async def process(callback: CallbackQuery):
    await callback.message.edit_text(text='–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!',
                                     reply_markup=await get_start_kb(callback.from_user.id))


@menu_router.callback_query(F.data[:10] == 'conf_user|')
async def process(callback: CallbackQuery):
    user_id = int(callback.data.split('|')[-2])
    hotel_rowid = int(callback.data.split('|')[-1])
    data = await bot_db.get_user_data(callback.from_user.id)
    user_date = data[7]
    user_count = data[8]
    user_children = data[9]
    user_place = data[10]
    hotel_data = await bot_db.get_hotel_data(user_id=callback.from_user.id, rowid=hotel_rowid)
    hotel_name, hotel_place, hotel_desc, hotel_contacts, hotel_photo = hotel_data[1:]
    media = [InputMediaPhoto(media=file_id) for file_id in hotel_photo.split('|')]
    await tgbot.send_media_group(chat_id=user_id,
                                 media=media)
    await tgbot.send_message(chat_id=user_id,
                             text='<b>‚úÖ –ù–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –æ—Ç–µ–ª—å!</b>\n\n'
                                   f'–û—Ç–µ–ª—å <i>"{hotel_name}"</i> –≤ –ø–æ—Å–µ–ª–∫–µ <i>{hotel_place}</i> —Å–æ–≥–ª–∞—Å–µ–Ω –≤–∞—Å –∑–∞—Å–µ–ª–∏—Ç—å!\n'
                                   f'üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–µ–ª—è: <i>—Å–∫—Ä—ã—Ç—ã –¥–æ –æ–ø–ª–∞—Ç—ã</i>\n\n'
                                   f'<b>–í—ã —É–∫–∞–∑–∞–ª–∏:</b>\n'
                                   f'–í—Ä–µ–º—è: <i>{user_date}</i>\n'
                                   f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <i>{user_count} —á–µ–ª–æ–≤–µ–∫</i>\n'
                                   f'–î–µ—Ç–∏: <i>{user_children}</i>\n'
                                   f'–ü–æ—Å–µ–ª–æ–∫: <i>{user_place}</i>\n\n'
                                   f'–ï—Å–ª–∏ –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ\n<b>"‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω"</b>\n–µ—Å–ª–∏ –Ω–µ—Ç -\n<b>"‚ùå –û—Ç–∫–∞–∂—É—Å—å"</b>',
                           reply_markup=await get_confirm_hotel(callback.from_user.id, hotel_rowid))
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text='‚úÖ <b>–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b>',
                             reply_markup=await get_start_kb(callback.from_user.id))


@menu_router.callback_query(F.data[:16] == 'conf_user_banya|')
async def process(callback: CallbackQuery):
    user_id = int(callback.data.split('|')[-2])
    banya_rowid = int(callback.data.split('|')[-1])
    data = await bot_db.get_user_data(callback.from_user.id)
    user_date = data[27]
    user_time = data[28]
    user_count = data[29]
    user_place = data[30]
    banya_data = await bot_db.get_banya_data(user_id=callback.from_user.id, rowid=banya_rowid)
    name, place, desc, contacts, photo = banya_data[1:]
    await tgbot.send_photo(chat_id=callback.from_user.id,
                           caption='<b>‚úÖ –ù–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –æ—Ç–∫–ª–∏–∫–Ω—É–ª–∞—Å—å –±–∞–Ω—è!</b>\n\n'
                                   f'–ë–∞–Ω—è <i>"{name}"</i> –≤ –ø–æ—Å–µ–ª–∫–µ <i>{place}</i> —Å–æ–≥–ª–∞—Å–µ–Ω –≤–∞—Å –∑–∞—Å–µ–ª–∏—Ç—å!\n'
                                   f'üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–µ–ª—è: <i>—Å–∫—Ä—ã—Ç—ã –¥–æ –æ–ø–ª–∞—Ç—ã</i>\n\n'
                                   f'<b>–í—ã —É–∫–∞–∑–∞–ª–∏:</b>\n'
                                   f'–í—Ä–µ–º—è: <i>{user_date}</i>\n'
                                   f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <i>{user_count} —á–µ–ª–æ–≤–µ–∫</i>\n'
                                   f'–í—Ä–µ–º—è: <i>{user_time}</i>\n'
                                   f'–ü–æ—Å–µ–ª–æ–∫: <i>{user_place}</i>\n\n'
                                   f'–ï—Å–ª–∏ –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ\n<b>"‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω"</b>\n–µ—Å–ª–∏ –Ω–µ—Ç -\n<b>"‚ùå –û—Ç–∫–∞–∂—É—Å—å"</b>',
                           reply_markup=await get_confirm_banya(callback.from_user.id, banya_rowid),
                           photo=photo)
    await tgbot.send_message(chat_id=user_id,
                             text='‚úÖ <b>–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b>',
                             reply_markup=await get_start_kb(callback.from_user.id))


@menu_router.callback_query(F.data[:16] == 'conf_user_trans|')
async def process(callback: CallbackQuery):
    user_id = int(callback.data.split('|')[-2])
    transfer_rowid = int(callback.data.split('|')[-1])
    user_data = await bot_db.get_user_data(callback.from_user.id)
    count = user_data[19]
    banya_data = await bot_db.get_transfer_data(user_id=callback.from_user.id, rowid=transfer_rowid)
    name, place, desc, contacts, photo = banya_data[1:]
    await tgbot.send_photo(chat_id=user_id,
                           caption='<b>‚úÖ –ù–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä!</b>\n\n'
                                   f'–¢—Ä–∞–Ω—Å—Ñ–µ—Ä <i>{name}</i> —Å–æ–≥–ª–∞—Å–µ–Ω –≤–∞—Å –ø–µ—Ä–µ–≤–µ–∑—Ç–∏\n'
                                   f'üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞: <i><code>{contacts}</code></i>\n\n'
                                   f'<b>–í—ã —É–∫–∞–∑–∞–ª–∏:</b>\n'
                                   f'<i>{count}</i>\n\n'
                                   f'–ï—Å–ª–∏ –≤–∞—Å —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ\n<b>"‚úÖ –°–æ–≥–ª–∞—Å–µ–Ω"</b>\n–µ—Å–ª–∏ –Ω–µ—Ç -\n<b>"‚ùå –û—Ç–∫–∞–∂—É—Å—å"</b>',
                           reply_markup=await get_confirm_transfer(callback.from_user.id, transfer_rowid),
                           photo=photo)
    await callback.message.edit_text(text='‚úÖ <b>–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.</b>',
                                     reply_markup=await get_start_kb(callback.from_user.id))



@menu_router.callback_query(F.data[:11] == 'conf-hotel|')
async def process(callback: CallbackQuery):
    await callback.message.delete()
    user_id = int(callback.data.split('|')[-2])
    hotel_rowid = int(callback.data.split('|')[-1])
    data = await bot_db.get_hotel_data(user_id, hotel_rowid)
    hotel_contacts = data[4]
    await tgbot.send_message(chat_id=user_id,
                             text='‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –Ω–∞ –∑–∞—Å–µ–ª–µ–Ω–∏–µ! –û–∂–∏–¥–∞–π—Ç–µ, —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è</b>\n\n')
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text='‚úÖ <b>–í—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–µ–ª—è. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º –æ—Ç–µ–ª—è –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!</b>\n\n'
                                  f'üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ç–µ–ª—è: <i>—Å–∫—Ä—ã—Ç—ã –¥–æ –æ–ø–ª–∞—Ç—ã</i>\n\n'
                                  f'–°–æ–≤–µ—Ä—à–∏—Ç–µ')


@menu_router.callback_query(F.data[:13] == 'cancel-hotel|')
async def process(callback: CallbackQuery):
    await callback.message.delete()
    user_id = callback.data.split('|')[-1]
    await tgbot.send_message(chat_id=user_id,
                             text='‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</b>\n\n')
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text='‚úÖ <b>–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</b>\n\n')


@menu_router.callback_query(F.data[:11] == 'conf-banya|')
async def process(callback: CallbackQuery):
    await callback.message.delete()
    user_id = int(callback.data.split('|')[-2])
    banya_rowid = int(callback.data.split('|')[-1])
    data = await bot_db.get_banya_data(user_id, banya_rowid)
    banya_contacts = data[5]
    await tgbot.send_message(chat_id=user_id,
                             text='‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∏! –û–∂–∏–¥–∞–π—Ç–µ, —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è</b>\n\n')
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text='‚úÖ <b>–í—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∏. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!</b>\n\n'
                                   f'üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã –±–∞–Ω–∏: <i><code>{banya_contacts}</code></i>')


@menu_router.callback_query(F.data[:13] == 'cancel-banya|')
async def process(callback: CallbackQuery):
    await callback.message.delete()
    user_id = callback.data.split('|')[-1]
    await tgbot.send_message(chat_id=user_id,
                             text='‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</b>\n\n')
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text='‚úÖ <b>–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</b>\n\n')


@menu_router.callback_query(F.data[:11] == 'conf-trans|')
async def process(callback: CallbackQuery):
    await callback.message.delete()
    user_id = int(callback.data.split('|')[-2])
    transfer_rowid = int(callback.data.split('|')[-1])
    data = await bot_db.get_transfer_data(user_id, transfer_rowid)
    transfer_contacts = data[4]
    await tgbot.send_message(chat_id=user_id,
                             text='‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –Ω–∞ –ø—Ä–µ–¥–ª–æ–µ–∂–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞! –û–∂–∏–¥–∞–π—Ç–µ, —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è</b>\n\n')
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text='‚úÖ <b>–í—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ!</b>\n\n'
                                   f'üë§ –ö–æ–Ω—Ç–∞–∫—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏: <i><code>{transfer_contacts}</code></i>')


@menu_router.callback_query(F.data[:13] == 'cancel-trans|')
async def process(callback: CallbackQuery):
    await callback.message.delete()
    user_id = callback.data.split('|')[-1]
    await tgbot.send_message(chat_id=user_id,
                             text='‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</b>\n\n')
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text='‚úÖ <b>–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.</b>\n\n')


@menu_router.callback_query(F.data == 'cancel-trans')
async def process(callback: CallbackQuery):
    await callback.message.edit_text(text='‚úÖ <b>–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!</b>')



@menu_router.callback_query(F.data == 'my-transfer')
async def process(callback: CallbackQuery):
    try:
        await callback.message.edit_text(text='–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:',
                                         reply_markup=await get_transfers_kb(callback.from_user.id))
    except:
        await callback.message.delete()
        await tgbot.send_message(chat_id=callback.from_user.id,
                                 text='–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:',
                                 reply_markup=await get_transfers_kb(callback.from_user.id))


@menu_router.callback_query(F.data == 'confirm-search')
async def process(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    user_data = await bot_db.get_user_data(callback.from_user.id)
    place = user_data[5]
    date = user_data[7]
    count = user_data[8]
    place = user_data[10]
    children = user_data[9]
    print(user_data)
    hotels = await bot_db.get_place_hotels(place)
    user_ids = [i[0] for i in hotels]
    user_ids = set(user_ids)
    for user_id in user_ids:
        for hotel in hotels:
            if hotel[0] == user_id:
                await tgbot.send_message(chat_id=hotel[0],
                                         text=f'<b>üì© –ü—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å –æ—Ç <a href="{callback.from_user.url}">–∫–ª–∏–µ–Ω—Ç–∞</a> {("(@" + callback.from_user.username + ")") or ""}</b>\n\n'  # {callback.from_user.full_name}
                                              f'–ù–∞ –±—Ä–æ–Ω—å –æ—Ç–µ–ª—è –≤ <i>–ø–æ—Å–µ–ª–∫–µ {place}</i> –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ <i>{count} —á–µ–ª–æ–≤–µ–∫, –¥–µ—Ç–∏: {children}</i>, –Ω–∞ –ø–µ—Ä–∏–æ–¥ <i>{date}</i>',
                                         reply_markup=await get_confirm_request_hotel(user_id=callback.from_user.id,
                                                                                      owner_id=hotel[0]))
                break

    await callback.message.edit_text(text='<b>‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞—Å–µ–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º.</b>\n\n'
                                          '<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –æ—Ç–µ–ª—è.\n\n'
                                          '–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ—Ç–µ–ª—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞.</b>',
                                     reply_markup=await get_start_kb(callback.from_user.id))


@menu_router.callback_query(F.data == 'confirm-banya')
async def process(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    user_data = await bot_db.get_user_data(callback.from_user.id)
    date = user_data[27]
    time = user_data[28]
    count = user_data[29]
    place = user_data[30]
    print(user_data)
    banyas = await bot_db.get_place_banyas(place)
    user_ids = [i[0] for i in banyas]
    user_ids = set(user_ids)
    for user_id in user_ids:
        for banya in banyas:
            if banya[0] == user_id:
                await tgbot.send_message(chat_id=banya[0],
                                         text=f'<b>üì© –ü—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å –æ—Ç <a href="{callback.from_user.url}">–∫–ª–∏–µ–Ω—Ç–∞</a> {("(@" + callback.from_user.username + ")") or ""}</b>\n\n'  # {callback.from_user.full_name}
                                              f'–ù–∞ –±—Ä–æ–Ω—å –±–∞–Ω–∏ –≤ <i>–ø–æ—Å–µ–ª–∫–µ {place}</i> –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ <i>{count} —á–µ–ª–æ–≤–µ–∫</i>, –≤–æ –≤—Ä–µ–º—è <i>{time}</i>, –Ω–∞ –ø–µ—Ä–∏–æ–¥ <i>{date}</i>',
                                         reply_markup=await get_confirm_request_banya(callback.from_user.id, banya[0]))
                break

    await callback.message.edit_text(text='<b>‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞—Å–µ–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º.</b>\n\n'
                                          '<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –æ—Ç–µ–ª—è.\n\n'
                                          '–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ—Ç–µ–ª—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞.</b>',
                                     reply_markup=await get_start_kb(callback.from_user.id))


@menu_router.callback_query(F.data == 'confirm-trans')
async def process(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    user_data = await bot_db.get_user_data(callback.from_user.id)
    count = user_data[19]

    await callback.message.edit_text(text='<b>‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–∫–ª–∏–∫–∞</b>')

    transfers = await bot_db.get_all_transfers()
    user_transfer = list()
    if not transfers:
        await callback.answer(text='‚ùå –¢—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç!')
    for transfer in transfers:
        if transfer[0] not in user_transfer:
            user_transfer.append(transfer[0])
            await tgbot.send_message(chat_id=transfer[0],
                                     text=f'<b>üì© –ü—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å –æ—Ç <a href="{callback.from_user.url}">–∫–ª–∏–µ–Ω—Ç–∞</a> {("(@" + callback.from_user.username + ")") or ""}</b>\n'
                                          f'<i>–¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:</i>\n\n' + count,
                                     reply_markup=await get_confirm_request_transfer(callback.from_user.id, transfer[0]))

    # user_data = await bot_db.get_user_data(callback.from_user.id)
    # place_from = user_data[21]
    # place_to = user_data[16]
    # count = user_data[19]
    # children = user_data[20]
    # date = user_data[17]
    # time = user_data[18]
    # transfers = await bot_db.get_place_transfers(place_from)
    # user_ids = [i[0] for i in transfers]
    # user_ids = set(user_ids)
    # for user_id in user_ids:
    #     for transfer in transfers:
    #         if transfer[0] == user_id:
    #             await tgbot.send_message(chat_id=transfer[0],
    #                                      text=f'<b>üì© –ü—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å –æ—Ç <a href="{callback.from_user.url}">–∫–ª–∏–µ–Ω—Ç–∞</a> {("(@" + callback.from_user.username + ")") or ""}</b>\n\n'  # {callback.from_user.full_name}
    #                                           f'–ù–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –∏–∑ <i>–ø–æ—Å–µ–ª–∫–∞ {place_from}</i> –≤ <i>–ø–æ—Å–µ–ª–æ–∫ {place_to} –≤ </i>–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ <i>{count} —á–µ–ª–æ–≤–µ–∫, –¥–µ—Ç–∏: {children}</i> –≤–æ –≤—Ä–µ–º—è <i>{time}</i>, –Ω–∞ –ø–µ—Ä–∏–æ–¥ <i>{date}</i>',
    #                                      reply_markup=await get_confirm_request_transfer(callback.from_user.id, transfer[0]))
    #             break

    await callback.message.edit_text(text='<b>‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</b>\n\n'
                                          '<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –æ—Ç–µ–ª—è.\n\n'
                                          '–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ—Ç–µ–ª—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞.</b>',
                                     reply_markup=await get_start_kb(callback.from_user.id))



@menu_router.callback_query(F.data == 'my-hotels')
async def process(callback: CallbackQuery):
    try:
        await callback.message.edit_text(text='–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –æ—Ç–µ–ª–µ–π:',
                                         reply_markup=await get_hotels_kb(callback.from_user.id))
    except:
        await callback.message.delete()
        await tgbot.send_message(chat_id=callback.from_user.id,
                                 text='–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –æ—Ç–µ–ª–µ–π:',
                                 reply_markup=await get_hotels_kb(callback.from_user.id))


@menu_router.callback_query(F.data[:10] == 'my-hotels|')
async def process(callback: CallbackQuery):
    hotel_rowid = callback.data.split('|')[-1]
    hotel_data = await bot_db.get_hotel_data(user_id=callback.from_user.id, rowid=hotel_rowid)
    hotel_name, hotel_place, hotel_desc, hotel_contacts, hotel_photo = hotel_data[1:]
    await callback.message.delete()
    await tgbot.send_photo(chat_id=callback.from_user.id,
                           caption='<b>–í–∞—à –æ—Ç–µ–ª—å:</b>\n\n'
                                   f'–ù–∞–∑–≤–∞–Ω–∏–µ: {hotel_name}\n'
                                   f'–ü–æ—Å–µ–ª–æ–∫: {hotel_place}\n'
                                   f'–û–ø–∏—Å–∞–Ω–∏–µ: {hotel_desc}\n'
                                   f'–ö–æ–Ω—Ç–∞–∫—Ç—ã: {hotel_contacts}\n'
                                   '–§–æ—Ç–æ: *—Å–≤–µ—Ä—Ö—É*',
                           reply_markup=await get_my_hotels_back_kb(hotel_name),
                           photo=hotel_photo)



@menu_router.callback_query(F.data[:10] == 'del-hotel|')
async def process(callback: CallbackQuery):
    hotel_name = callback.data.split('|')[-1]
    hotel_data = await bot_db.get_hotel_data(user_id=callback.from_user.id, name=hotel_name)
    print(hotel_data)
    hotel_data = await bot_db.get_hotel_data(user_id=callback.from_user.id, name=hotel_name)
    hotel_name, hotel_place, hotel_desc, hotel_contacts, hotel_photo = hotel_data[1:]
    await callback.message.delete()
    await tgbot.send_message(chat_id=callback.from_user.id,
                             text=f'–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ—Ç–µ–ª—å <i>{hotel_name}</i>?',
                             reply_markup=await get_del_hotel_confirm_kb(hotel_name))


@menu_router.callback_query(F.data[:18] == 'del-hotel-confirm|')
async def process(callback: CallbackQuery):
    hotel_name = callback.data.split('|')[-1]
    await bot_db.delete_hotel(user_id=callback.from_user.id, name=hotel_name)
    await callback.message.edit_text(text='–û—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!')


@menu_router.callback_query(F.data == 'my-banya')
async def process(callback: CallbackQuery):
    try:
        await callback.message.edit_text(text='–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±–∞–Ω—å:',
                                         reply_markup=await get_banyas_kb(callback.from_user.id))
    except:
        await callback.message.delete()
        await tgbot.send_message(chat_id=callback.from_user.id,
                                 text='–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –±–∞–Ω—å:',
                                 reply_markup=await get_banyas_kb(callback.from_user.id))


@menu_router.callback_query(F.data[:4] == 'cal|')
async def process(callback: CallbackQuery):
    arg, offset = callback.data.split('|')[1:]
    await callback.message.edit_text(text=callback.message.text,
                                     reply_markup=await get_calendar_kb(arg=arg, offset=int(offset)))


@menu_router.callback_query(F.data[:15] == 'hotel-from-day|')
async def process(callback: CallbackQuery):
    date_from = callback.data.split('|')[-1]
    await bot_db.update_user_date(arg='hotel', user_id=callback.from_user.id, date=date_from)
    await callback.message.edit_text(text=callback.message.text + f'\n\n<i>–° {date_from} –ø–æ ...</i>',
                                     reply_markup=await get_calendar_kb(arg='hotel-to'))


@menu_router.callback_query(F.data[:13] == 'hotel-to-day|')
async def process(callback: CallbackQuery):
    date_to = callback.data.split('|')[-1]
    data = await bot_db.get_user_data(callback.from_user.id)
    date_from = data[7]
    await bot_db.update_user_date(arg='hotel', user_id=callback.from_user.id, date=f'{date_from} - {date_to}')
    await callback.message.edit_text(text=callback.message.text[:-3] + date_to,
                                     reply_markup=await get_confirm_date_keyboard('hotel'))


@menu_router.callback_query(F.data == 'confirm-date-hotel')
async def process(callback: CallbackQuery, state: FSMContext):
    prev_msg = await callback.message.edit_text(text='<b>‚úè –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫</b>',
                                                reply_markup=await get_search_cancel_kb())

    await state.set_state(SearchState.search_count)
    await state.update_data(data={'prev_msg': prev_msg})


@menu_router.callback_query(F.data == 'cancel-date-hotel')
async def process(callback: CallbackQuery):
    await callback.message.edit_text(text='<b>‚úè –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø–æ—Å–µ—â–µ–Ω–∏—è</b>',
                                     reply_markup=await get_calendar_kb(arg='hotel-from'))


@menu_router.callback_query(F.data[:20] == 'transfer-from-place|')
async def process(callback: CallbackQuery):
    place = callback.data.split('|')[-1]
    await bot_db.update_user_place(arg='transfer', user_id=callback.from_user.id, place=place)
    await callback.message.edit_text(text='<b>‚úè –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å–µ–ª–æ–∫, –∫—É–¥–∞ –≤—ã –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä:</b>\n\n'
                                          f'<i>–ò–∑ {callback.data.split("|")[-1]} –≤ ...</i>',
                                     reply_markup=await get_places_kb(arg='transfer-to'))


@menu_router.callback_query(F.data[:18] == 'transfer-to-place|')
async def process(callback: CallbackQuery):
    place = callback.data.split('|')[-1]
    data = await bot_db.get_user_data(callback.from_user.id)
    place_from = data[21]
    await bot_db.update_user_to(arg='transfer', user_id=callback.from_user.id, to=place)
    await callback.message.edit_text(text='<b>‚úè –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å–µ–ª–æ–∫, –∫—É–¥–∞ –≤—ã –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä:</b>\n\n'
                                          f'<i>–ò–∑ {place_from} –≤ {place}</i>',
                                     reply_markup=await get_confirm_place_kb(arg='transfer'))



@menu_router.callback_query(F.data == 'cancel-place-transfer')
async def process(callback: CallbackQuery):
    await callback.message.edit_text(text='<b>‚úè –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞</b>',
                                     reply_markup=await get_calendar_kb(arg='transfer'))


@menu_router.callback_query(F.data == 'confirm-place-transfer')
async def process(callback: CallbackQuery, state: FSMContext):
    await bot_db.update_user_date(user_id=callback.from_user.id, date=callback.data.split('|')[-1], arg='transfer')
    prev_msg = await callback.message.edit_text(text='<b>‚úè –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞</b>',
                                                reply_markup=await get_search_cancel_kb())
    await state.set_state(SearchState.transfer_time)
    await state.update_data(data={'prev_msg': prev_msg})


@menu_router.callback_query(F.data[:11] == 'all-hotels|')
async def process(callback: CallbackQuery):
    offset = int(callback.data.split('|')[-1])
    await callback.message.edit_text(text='–í—Å–µ –æ—Ç–µ–ª–∏',
                                     reply_markup=await get_all_hotels_kb(offset))


@menu_router.callback_query(F.data[:11] == 'all-places|')
async def process(callback: CallbackQuery):
    offset = int(callback.data.split('|')[-1])
    await callback.message.edit_text(text='–í—Å–µ –ø–æ—Å–µ–ª–∫–∏',
                                     reply_markup=await get_all_places_kb(offset))


@menu_router.callback_query(F.data[:10] == 'all-trans|')
async def process(callback: CallbackQuery):
    offset = int(callback.data.split('|')[-1])
    await callback.message.edit_text(text='–í—Å–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä—ã',
                                     reply_markup=await get_all_transfers_kb(offset))


@menu_router.callback_query(F.data[:10] == 'all-users|')
async def process(callback: CallbackQuery):
    offset = int(callback.data.split('|')[-1])
    await callback.message.edit_text(text='–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
                                     reply_markup=await get_all_users_kb(offset))


@menu_router.callback_query(F.data[:15] == 'all-hotels-adm|')
async def process(callback: CallbackQuery):
    user_id, name = callback.data.split('|')
    user_data = await bot_db.get_user_data(int(user_id))
    hotel_data = await bot_db.get_hotel_data(int(user_id), name)
    name, place, desc, contacts, photo = hotel_data[1:]
    await callback.message.delete()
    await tgbot.send_photo(caption=f'<b>–û—Ç–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <a href="tg://user?id={user_id}">{user_data[-1]}</a>:</b>\n\n'
                                   f'–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n'
                                   f'–ü–æ—Å–µ–ª–æ–∫: {place}\n'
                                   f'–û–ø–∏—Å–∞–Ω–∏–µ: {desc}\n'
                                   f'–ö–æ–Ω—Ç–∞–∫—Ç—ã: {contacts}\n',
                           photo=photo,
                           reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='all-hotels|0')]]))


@menu_router.callback_query(F.data[:15] == 'all-places-adm|')
async def process(callback: CallbackQuery):
    name = callback.data.split('|')[-1]
    await callback.message.edit_text(text=f'<b>–ü–æ—Å–µ–ª–æ–∫ {name}</b>',
                                     reply_markup=InlineKeyboardMarkup(
                                         inline_keyboard=[
                                             [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='all-places|0'),
                                              InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f'del-place|{name}')]]))


@menu_router.callback_query(F.data[:14] == 'all-trans-adm|')
async def process(callback: CallbackQuery):
    user_id, name = callback.data.split('|')
    user_data = await bot_db.get_user_data(int(user_id))
    transfer_data = await bot_db.get_transfer_data(int(user_id), name)
    name, place, desc, contacts, photo = transfer_data[1:]
    await callback.message.delete()
    await tgbot.send_photo(caption=f'<b>–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <a href="tg://user?id={user_id}">{user_data[-1]}</a>:</b>\n\n'
                                   f'–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n'
                                   f'–ü–æ—Å–µ–ª–æ–∫: {place}\n'
                                   f'–û–ø–∏—Å–∞–Ω–∏–µ: {desc}\n'
                                   f'–ö–æ–Ω—Ç–∞–∫—Ç—ã: {contacts}\n',
                           photo=photo,
                           reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='all-trans|0')]]))


@menu_router.callback_query(F.data[:14] == 'all-users-adm|')
async def process(callback: CallbackQuery):
    user_id = callback.data.split('|')[-1]
    user_data = await bot_db.get_user_data(int(user_id))
    await callback.message.edit_text(text=f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href="tg://user?id={user_id}">{user_data[-1]}</a>:</b>\n\n'
                                          f'–°—Ç–∞—Ç—É—Å: {user_data[1]}',
                           reply_markup=InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='all-users|0')]]))


@menu_router.callback_query(F.data[:10] == 'del-place|')
async def process(callback: CallbackQuery):
    name = callback.data.split('|')[-1]
    await bot_db.del_place(name)
    await callback.message.edit_text(text=f'<b>–ü–æ—Å–µ–ª–æ–∫ <i>{name}</i> —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!</b>')